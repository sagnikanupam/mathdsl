{
    "logVariable": -1.0144676121605558,
    "productions": [
        {
            "expression": "conpole_refl",
            "logProbability": -2.7207545462019764
        },
        {
            "expression": "conpole_comm",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_assoc",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_dist",
            "logProbability": -2.641766134883346
        },
        {
            "expression": "conpole_subcomm",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_eval",
            "logProbability": -1.4738797203318308
        },
        {
            "expression": "conpole_addzero",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_subzero",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_multone",
            "logProbability": -2.734547868334312
        },
        {
            "expression": "conpole_divone",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_divself",
            "logProbability": -3.545478084550641
        },
        {
            "expression": "conpole_subself",
            "logProbability": -3.484853462734206
        },
        {
            "expression": "conpole_subsub",
            "logProbability": -3.545478084550641
        },
        {
            "expression": "conpole_multzero",
            "logProbability": -3.545478084550641
        },
        {
            "expression": "conpole_zerodiv",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_add",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_sub",
            "logProbability": -3.347652341220721
        },
        {
            "expression": "conpole_mult",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_div",
            "logProbability": -3.610016605688212
        },
        {
            "expression": "conpole_newConstGen",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "mathDomain_0",
            "logProbability": -1.7321470664265393
        },
        {
            "expression": "mathDomain_1",
            "logProbability": -0.9589571781930575
        },
        {
            "expression": "mathDomain_2",
            "logProbability": -1.2814253667302538
        },
        {
            "expression": "mathDomain_3",
            "logProbability": -0.9849326645963181
        },
        {
            "expression": "mathDomain_4",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "mathDomain_5",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "mathDomain_6",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "mathDomain_7",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "mathDomain_8",
            "logProbability": -2.482452660826433
        },
        {
            "expression": "mathDomain_9",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "mathDomain_10",
            "logProbability": -2.607615803780439
        },
        {
            "expression": "#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1))",
            "logProbability": -2.223480911902773
        },
        {
            "expression": "#(lambda (#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1)) (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_1)))",
            "logProbability": -2.300583090323373
        },
        {
            "expression": "#(lambda (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_1))",
            "logProbability": -2.63288065772353
        },
        {
            "expression": "#(lambda (#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1)) (conpole_subself $0 mathDomain_1)))",
            "logProbability": -2.499034029047211
        }
    ]
}