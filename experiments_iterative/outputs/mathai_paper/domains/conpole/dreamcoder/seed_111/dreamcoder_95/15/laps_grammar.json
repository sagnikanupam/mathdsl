{
    "logVariable": -0.7747271675523679,
    "productions": [
        {
            "expression": "conpole_refl",
            "logProbability": -3.3543284476706177
        },
        {
            "expression": "conpole_comm",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_assoc",
            "logProbability": -3.5213825323337833
        },
        {
            "expression": "conpole_dist",
            "logProbability": -3.3992798355328837
        },
        {
            "expression": "conpole_subcomm",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_eval",
            "logProbability": -2.0630695788104045
        },
        {
            "expression": "conpole_addzero",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_subzero",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_multone",
            "logProbability": -2.847908117372543
        },
        {
            "expression": "conpole_divone",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_divself",
            "logProbability": -3.8398362634523178
        },
        {
            "expression": "conpole_subself",
            "logProbability": -4.036546557698372
        },
        {
            "expression": "conpole_subsub",
            "logProbability": -4.39945205138774
        },
        {
            "expression": "conpole_multzero",
            "logProbability": -4.338827429571306
        },
        {
            "expression": "conpole_zerodiv",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_add",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_sub",
            "logProbability": -3.495740101720446
        },
        {
            "expression": "conpole_mult",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_div",
            "logProbability": -4.4639905725253115
        },
        {
            "expression": "conpole_newConstGen",
            "logProbability": -3.1973116469523597
        },
        {
            "expression": "mathDomain_0",
            "logProbability": -2.09869935828425
        },
        {
            "expression": "mathDomain_1",
            "logProbability": -0.9708879149238783
        },
        {
            "expression": "mathDomain_2",
            "logProbability": -1.6286957290385145
        },
        {
            "expression": "mathDomain_3",
            "logProbability": -1.285303049572728
        },
        {
            "expression": "mathDomain_4",
            "logProbability": -2.0033891784799254
        },
        {
            "expression": "mathDomain_5",
            "logProbability": -3.1327731258147886
        },
        {
            "expression": "mathDomain_6",
            "logProbability": -2.5041644663924147
        },
        {
            "expression": "mathDomain_7",
            "logProbability": -3.1327731258147886
        },
        {
            "expression": "mathDomain_8",
            "logProbability": -3.0149900901584052
        },
        {
            "expression": "mathDomain_9",
            "logProbability": -3.1973116469523597
        },
        {
            "expression": "mathDomain_10",
            "logProbability": -3.1973116469523597
        },
        {
            "expression": "#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1))",
            "logProbability": -2.5501889418784165
        },
        {
            "expression": "#(lambda (#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1)) (conpole_eval (conpole_refl (conpole_divself (conpole_assoc $0 mathDomain_4) mathDomain_6) mathDomain_0) mathDomain_1)))",
            "logProbability": -1.995671658614377
        },
        {
            "expression": "#(lambda (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_1))",
            "logProbability": -2.577181925897171
        },
        {
            "expression": "#(lambda (#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1)) (conpole_subself $0 mathDomain_1)))",
            "logProbability": -2.4336133554004498
        },
        {
            "expression": "#(lambda (#(lambda (conpole_multone (conpole_eval (conpole_eval (conpole_dist (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_3) mathDomain_1) mathDomain_3) mathDomain_2) mathDomain_1)) (#(lambda (conpole_eval (conpole_refl $0 mathDomain_0) mathDomain_1)) $0)))",
            "logProbability": -1.4992347723004862
        }
    ]
}